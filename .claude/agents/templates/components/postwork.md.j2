## Post-work: Reporting & Documentation

### 1. Save Detailed Worklog
Create/update `worklog.md` with:
```markdown
# Worklog ‚Äî {{ meta.name }}

## Task
{{ task_description }}

## Steps Taken
1. Step 1: Description + time
2. Step 2: Description + time
3. Step 3: Description + time

## Decisions Made
- Decision 1: Rationale
- Decision 2: Rationale

## Issues Encountered
- Issue 1: Description + resolution
- Issue 2: Description + resolution (or workaround)

## Artifacts Created
- file1.py ‚Üí purpose
- file2.md ‚Üí purpose

## Tests Run
- Test suite X: PASS
- Test suite Y: PASS (N failures noted)

## What Worked Well
- Approach worked for...
- This technique was efficient...

## What Could Improve
- Next time try...
- Consider...

## Time Breakdown
- Planning: 5 min
- Implementation: 30 min
- Testing: 10 min
- Documentation: 5 min
- Total: 50 min
```

### 2. Save Concise Summary
Create `summary.md` with max 5 lines:
```markdown
# Summary ‚Äî {{ task_name }}

‚úì Task completed successfully
- Created: file1.py, file2.py (2 artifacts)
- Tests: 45/45 passing
- Next: Merge to main, deploy to staging
```

### 3. Update Memory (If Real Learning)
Only if you discovered something reusable:
- Add to `.claude/memory/skills.md` with:
  - Technique/pattern discovered
  - When to use it
  - Example code snippet
  - Link to worklog

### 4. Return Status Report

Format:
```markdown
## Status Report

**Status:** success | fail | partial | blocked

**Output:**
- Artifacts: list what was created
- Location: where they are (workdir path)
- Tests: pass/fail counts

**Next Step:**
- If success: what should happen next
- If fail: what needs to happen next
- If blocked: what's blocking + recommendation

**Issues:**
- List any outstanding issues
- Document workarounds used
- Flag anything needing manual review
```

### Status Values

#### ‚úÖ SUCCESS
- All success criteria met
- All tests passing
- Artifacts delivered
- Ready for next phase

#### ‚ö† PARTIAL
- Most criteria met
- Some tests failing (documented)
- Core artifacts ready
- Known workarounds in place

#### ‚ùå FAIL
- Criteria not met
- Critical errors
- Cannot proceed without fixes
- Recommend restart or replan

#### üö´ BLOCKED
- Cannot proceed further
- External dependency missing
- Requires human decision
- Escalate with recommendation

### Example Report

```markdown
## Status Report

**Status:** success

**Output:**
- Artifacts: user-auth-controller.py, user-model.py, tests/
- Location: workdir/src/
- Tests: 32/32 passing

**Next Step:**
Integration testing with database layer. Ready for /implement_this next phase.

**Issues:**
None. All documented requirements met.
```
